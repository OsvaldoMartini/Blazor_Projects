@page "/account"
@inject IHttpApiClientRequestBuilderFactory ClientFactory;
@inject IAccountService AccountService;
@inject IUriHelper UriHelper

<AccountMenu></AccountMenu>

<form method="post" >
    <div class="form-group">
        <label for="Email">Email</label>
        <input for="Email" class="form-control" bind="@_account.Email" />
        <ValidationError FieldName="Email" Errors="@_errors" />
    </div>
    <button type="button" onclick="@PostAccount" class="btn btn-default">Save</button>
</form>

@functions {
    AccountViewModel _account = new AccountViewModel();
    Dictionary<string,List<string>> _errors;
    protected override async Task OnInitAsync()
    {
        _account = await AccountService.CurrentAccount();
        StateHasChanged();
    }
    async Task PostAccount()
    {
        _errors = null;
        await ClientFactory.Create("/api/account/edit")
            .OnBadRequest<Dictionary<string,List<string>>>(errors => _errors = errors)
            .OnOK("Informations saved successfully")
            .Post(_account);
        StateHasChanged();
    }
}

